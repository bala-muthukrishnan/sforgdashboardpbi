-- CENTRALIZED ACCOUNT HAS CONSOLIDATED DB WHERE POWERBI WILL CONNECT FOR OPS DASHBOARD 

USE ROLE SYSADMIN;

CREATE DATABASE IF NOT EXISTS ORGANIZATION;
USE DATABASE ORGANIZATION;

CREATE SCHEMA IF NOT EXISTS CONSOLIDATED_ACCOUNT_USAGE;
USE SCHEMA CONSOLIDATED_ACCOUNT_USAGE;

CREATE TABLE IF NOT EXISTS ORGANIZATION.CONSOLIDATED_ACCOUNT_USAGE.LOCAL_ACCOUNT_USAGE_TABLES (
  TABLE_NAME VARCHAR);
    
INSERT INTO ORGANIZATION.CONSOLIDATED_ACCOUNT_USAGE.LOCAL_ACCOUNT_USAGE_TABLES (TABLE_NAME) VALUES
('QUERY_HISTORY'),
('LOGIN_HISTORY'),
('DATABASE_STORAGE_USAGE_HISTORY'),
('WAREHOUSE_METERING_HISTORY')
;

CREATE TABLE ORGANIZATION.CONSOLIDATED_ACCOUNT_USAGE.LOCAL_ACCOUNT_USAGE_DATABASES (
  DATABASE_NAME VARCHAR);


use role accountadmin;

-- CREATE DATABASE FROM SHARE 
USE ROLE ACCOUNTADMIN;
-- Replace the name of shared account name 
CREATE OR REPLACE DATABASE <shared_account_name>_LOCAL_ACCOUNT_USAGE FROM  SHARE <shared_account_name>.LOCAL_ACCOUNT_USAGE_SHARE; 
GRANT IMPORTED PRIVILEGES ON DATABASE AWS_CAS1_LOCAL_ACCOUNT_USAGE TO ROLE SYSADMIN;

 -- Replace the name of shared account name 

-- INSERT SHARED DB NAMES FROM OTHER ACCOUNTS   
-- ACCOUNT:A
INSERT INTO ORGANIZATION.CONSOLIDATED_ACCOUNT_USAGE.LOCAL_ACCOUNT_USAGE_DATABASES VALUES ('<shared_account_name>_LOCAL_ACCOUNT_USAGE');
-- ACCOUNT: B - CENTRALIZED ACCOUNT 
INSERT INTO ORGANIZATION.CONSOLIDATED_ACCOUNT_USAGE.LOCAL_ACCOUNT_USAGE_DATABASES VALUES ('ORGANIZATION');

-- PROC CREATES CONSOLIDATED VIEWS FROM SHARED DATABASES AND LOCAL ACCOUNT

CREATE or REPLACE PROCEDURE ORGANIZATION.CONSOLIDATED_ACCOUNT_USAGE.BUILD_CONSOLIDATED_VIEWS_SP()
RETURNS VARCHAR
language JavaScript
EXECUTE AS OWNER
as
$$
  var sqlStmt = "";
  var result = "";
  var return_str = "";
  var sqlStmt2 = "";
  var sqlResult2 = "";

  try {
    // Read SQL Statements
    var sqlCmd = `select 'create or replace view '||table_name||' as '||listagg(stmnt, ' UNION ALL ')
    from (
    select t.table_name,'select * from '||d.database_name||'.LOCAL_ACCOUNT_USAGE.'||t.table_name STMNT
    from LOCAL_ACCOUNT_USAGE_DATABASES d, LOCAL_ACCOUNT_USAGE_TABLES t
    order by 1, 2
    ) x
    group by table_name
    order by 1`;
    var sqlStmt = snowflake.createStatement( {sqlText: sqlCmd} );
    var sqlResult = sqlStmt.execute();
    var row = sqlStmt.execute();
    var rowCount = sqlStmt.getRowCount();
  while (row.next()) {
    sqlCmd = row.getColumnValue(1)
    sqlStmt2 = snowflake.createStatement( {sqlText: sqlCmd } );
    sqlResult2 = sqlStmt2.execute();
    }
  
  } catch(err) {
    return "Failed: " + sqlCmd + ": " + err ;
  }
  return "Done. "
$$
;


CREATE TASK IF NOT EXISTS UPDATE_CONSOLIDATED_USAGE_HISTORY_TASK
SCHEDULE = 'USING CRON 0 9 * * * America/Los_Angeles'
  WAREHOUSE='SYSADMIN_WH'
AS
CALL  ORGANIZATION.CONSOLIDATED_ACCOUNT_USAGE.BUILD_CONSOLIDATED_VIEWS_SP();

ALTER TASK ORGANIZATION.CONSOLIDATED_ACCOUNT_USAGE.UPDATE_CONSOLIDATED_USAGE_HISTORY_TASK RESUME;



-- TESTING 
USE ROLE SYSADMIN;
use database ORGANIZATION;
USE SCHEMA CONSOLIDATED_ACCOUNT_USAGE;
SHOW VIEWS;

SELECT DISTINCT ACCOUNT_NAME FROM LOGIN_HISTORY LIMIT 10;

SELECT DISTINCT ACCOUNT_NAME FROM QUERY_HISTORY LIMIT 10;

SELECT DISTINCT ACCOUNT_NAME FROM WAREHOUSE_METERING_HISTORY LIMIT 10;

SELECT DISTINCT ACCOUNT_NAME FROM DATABASE_STORAGE_USAGE_HISTORY LIMIT 10;
